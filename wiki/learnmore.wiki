#summary OpenMobster Mobile Cloud Platform - Overview

=== Introduction ===
*OpenMobster* is an open source platform for integrating Mobile Apps (on-device apps) with _Cloud_ services. Its goal is to provide the infrastructure for the Mobile App developer
to productively build apps that consume information that resides in the Cloud. It provides seamless application state/data synchronization, comet-style push notifications, 
consistent server-side API/frameworks to expose Cloud services, and consistent device-side API/frameworks to productively develop native mobile apps across multiple platforms.  

----

=== What services are provided by the platform? ===

==== Seamless App State/Data Synchronization: ====

Cloud data is made available inside an App's _local storage_. This allows the App
to function seamlessly in both _online_ as well as _offline_ modes. The data is automatically synchronized with the Cloud service based on local state changes. These state changes are auto detected and does not require any device-side sync-related programming on the part of the developer.


==== Comet-Style Push Notifications: ====

[http://en.wikipedia.org/wiki/Comet_%28programming%29 Comet] is an umbrella term for pushing state changes to an App from the server, instead of an App proactively requesting it. The _Push_ mechanism uses pure network/socket based approach instead of clunky methodologies like sending sms alerts or email alerts. The Push notifications happen inside the App's execution environment. 

==== Simple Mobile RPC (Remote Procedure Call) ====

Provides a simple way of exposing your server-side coarse grained business services. These services are invoked via a simple RPC mechanism without any low-level programming like http-client code, client side REST library, etc on the part of the App developer. There is a simple RPC API that is used for making these calls. The RPC calls are _synchronous_ in nature.


==== Management Console: ====

A _Management Console_ is provided to administrate the Cloud Server. It provides security, and account provisioning features. Over time the _Management Console_ will carry device management features like remote wipe, remote tracking, remote lock-down, etc.

----

=== What server-side frameworks are provided? ===

----

=== What device-side frameworks are provided? ===

----

=== What mobile platforms are supported? ===

----

=== Read to write your first Mobile Cloud App? ===